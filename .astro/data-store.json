[["Map",1,2,9,10,92,93],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.7.4","content-config-digest","ede9a2d66058353c","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://gsuarezr.github.io\",\"compressHTML\":true,\"base\":\"/https://gsuarezr.github.io\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null],\"rehypePlugins\":[null],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","books",["Map",11,12],"top-10",{"id":11,"data":13,"filePath":82,"digest":83,"rendered":84,"legacyId":91},{"title":14,"books":15},"My Favorite 10 Books",[16,25,34,40,46,52,58,64,70,76],{"title":17,"author":18,"cover":19,"summary":20,"reasons":21},"The Ultimate HitchHikers Guide To The Galaxy","Douglas Adams","https://covers.openlibrary.org/b/id/8442141-L.jpg","This is the collection of all five of the books in Douglas Adams' famous galaxy exploring trilogy. It follows Arthur Dent and his friends as they travel around the Milky Way meeting strange new cultures and having many entertaining adventures in the search for the meaning of life. ",[22,23,24],"I found the fictitious scientific concepts to be logical, whimsical and incredibly funny, the impossibility drive might be one of the reasons I got into science","Arthur is quite the relatable character, forced out of his home into a place he knows nothing about is something many emigrants can relate to. ","42",{"title":26,"author":27,"cover":28,"summary":29,"reasons":30},"1984","George Orwell","https://covers.openlibrary.org/b/id/12919048-L.jpg","Nineteen Eighty-Four: A Novel, often referred to as 1984, is a dystopian social science fiction novel by the English novelist George Orwell (the pen name of Eric Arthur Blair). It was published on 8 June 1949 by Secker & Warburg as Orwell's ninth and final book completed in his lifetime. Thematically, Nineteen Eighty-Four centres on the consequences of totalitarianism, mass surveillance, and repressive regimentation of persons and behaviours within society. Orwell, himself a democratic socialist, modelled the authoritarian government in the novel after Stalinist Russia. More broadly, the novel examines the role of truth and facts within politics and the ways in which they are manipulated.",[31,32,33],"First reason why I loved this book","Second reason explaining its impact","Third reason about its unique perspective",{"title":35,"author":36,"cover":37,"summary":38,"reasons":39},"The Pillars of the Earth","Ken Follet","https://covers.openlibrary.org/b/id/12706348-L.jpg","The Pillars of the Earth is a historical novel by Welsh author Ken Follett published in 1989 about the building of a cathedral in the fictional town of Kingsbridge, England. Set in the 12th century, the novel covers the time between the sinking of the White Ship and the murder of Thomas Becket, but focuses primarily on the Anarchy. The book traces the development of Gothic architecture out of the preceding Romanesque architecture, and the fortunes of the Kingsbridge priory and village against the backdrop of historical events of the time. ",[31,32,33],{"title":41,"author":42,"cover":43,"summary":44,"reasons":45},"Sophie's World","Jostein Gaarder","https://covers.openlibrary.org/b/id/10261804-L.jpg","A page-turning novel that is also an exploration of the great philosophical concepts of Western thought, Sophie's World has fired the imagination of readers all over the world, with more than twenty million copies in print. One day fourteen-year-old Sophie Amundsen comes home from school to find in her mailbox two notes, with one question on each: 'Who are you?' and 'Where does the world come from?' From that irresistible beginning, Sophie becomes obsessed with questions that take her far beyond what she knows of her Norwegian village. Through those letters, she enrolls in a kind of correspondence course, covering Socrates to Sartre, with a mysterious philosopher, while receiving letters addressed to another girl. Who is Hilde? And why does her mail keep turning up? To unravel this riddle, Sophie must use the philosophy she is learning―but the truth turns out to be far more complicated than she could have imagined",[31,32,33],{"title":47,"author":48,"cover":49,"summary":50,"reasons":51},"The Giving Tree","Shel Silverstein","https://covers.openlibrary.org/b/id/8769238-L.jpg","Once upon a time, a little boy got along very well with a tree. But as he grows up, they start spending less and less time together. What will the tree do when the boy comes back, again and again? ",[31,32,33],{"title":53,"author":54,"cover":55,"summary":56,"reasons":57},"The Last Olympian","Rick Riordan","https://covers.openlibrary.org/b/id/12642013-L.jpg","The greatest monster of all, the storm giant Typhon, is on the loose, wreaking havoc and destruction across the U.S. - while Kronos's army lays siege to Manhattan. Soon Percy Jackson must make the hardest choice of his life - a choice that will save or destroy the world.",[31,32,33],{"title":59,"author":60,"cover":61,"summary":62,"reasons":63}," Sapiens: A Brief History of Humankind ","Yuval Noah Harari","https://covers.openlibrary.org/b/id/9137127-L.jpg","Starting from this provocative idea, Sapiens goes on to retell the history of our species from a completely fresh perspective. It explains that money is the most pluralistic system of mutual trust ever devised; that capitalism is the most successful religion ever invented; that the treatment of animals in modern agriculture is probably the worst crime in history; and that even though we are far more powerful than our ancient ancestors, we aren’t much happier. By combining profound insights with a remarkably vivid language, Sapiens acquired cult status among diverse audiences, captivating teenagers as well as university professors, animal rights activists alongside government ministers.",[31,32,33],{"title":65,"author":66,"cover":67,"summary":68,"reasons":69}," The Clan of the Cave Bear ","Jean M. Auel","https://covers.openlibrary.org/b/id/12991883-L.jpg","Here is a saga of people who call themselves the Clan of the Cave Bear; how they lived; the animals they hunted; the great totems they revered. But mostly it is the story of Ayla, the girl they found and raised, who was not like them. To the Clan, her fair looks make her different—ugly. And she has odd ways: she laughs, she cries, she has the abil- ity to speak. But even more, she struggles to be true to herself and, with her advanced intelligence, is curious about the world around her. Although Ayla is clearly a mem- ber of the Others, she is nurtured by her adoptive parents, befriended by members of the Clan, and gradually accepted into the family circle. But there are those who would cast her out for her strange, threatening ways.",[31,32,33],{"title":71,"author":72,"cover":73,"summary":74,"reasons":75}," Ask a Foolish Question","Robert Sheckley","https://www.gutenberg.org/cache/epub/33854/pg33854.cover.medium.jpg","Ask a Foolish Question by Robert Sheckley is a science fiction story written during the early 1950s. The narrative explores the philosophical implications of knowledge and inquiry through a central entity known as the Answerer, designed to provide answers to any question posed by the beings of the universe. The story raises intriguing questions about the nature of knowledge itself, highlighting how the formulation of a question can heavily influence the response received. In the tale, two central characters, Morran and Lingman, embark on a quest to find the Answerer, desperately seeking the ultimate truths about life and death. Meanwhile, a variety of other beings also seek answers to their own existential questions. However, when they finally confront the Answerer, they discover that their inquiries often lack the depth necessary to receive meaningful responses. The Answerer, while possessing vast knowledge, can only respond to questions that are framed correctly, exposing the limitations of the questioners' understanding. The story concludes with a poignant realization that without a foundational understanding, the questions posed will inevitably fail to reveal the profound truths they seek, emphasizing the complex relationship between knowledge, inquiry, and comprehension",[31,32,33],{"title":77,"author":78,"cover":79,"summary":80,"reasons":81}," And Then There Were None","Agatha Christie","https://covers.openlibrary.org/b/id/14586885-L.jpg","And Then There Were None is a mystery novel by the English writer Agatha Christie, described by her as the most difficult of her books to write. It was first published in the United Kingdom by the Collins Crime Club on 6 November 1939, as Ten Little Niggers, after the children's counting rhyme and minstrel song, which serves as a major element of the plot. A US edition was released in January 1940 with the title And Then There Were None, which is taken from the last five words of the song. All successive American reprints and adaptations use that title, except for the Pocket Books paperbacks published between 1964 and 1986, which appeared under the title Ten Little Indians. UK editions continued to use the original title until the current definitive title appeared with a reprint of the 1963 Fontana Paperback in 1985.",[31,32,33],"src/content/books/top-10.md","30b0f4e22046e186",{"html":85,"metadata":86},"",{"headings":87,"localImagePaths":88,"remoteImagePaths":89,"frontmatter":13,"imagePaths":90},[],[],[],[],"top-10.md","blog",["Map",94,95],"jax_root_pol",{"id":94,"data":96,"body":111,"filePath":112,"assetImports":113,"digest":115,"rendered":116,"legacyId":133},{"title":97,"date":98,"description":99,"jupyter":100},"Example Blog Post",["Date","2024-03-14T00:00:00.000Z"],"This is an example blog post showing Markdown capabilities",{"jupytext":101,"kernelspec":107},{"text_representation":102},{"extension":103,"format_name":104,"format_version":105,"jupytext_version":106},".md","markdown","1.3","1.16.4",{"display_name":108,"language":109,"name":110},"qutip-dev","python","python3","### Roots of Parametric Polynomials\n\nOn of my recent endless scrolls to social media, I encountered beautiful \nanimations from Professor Simone Conradi, showing the roots of parametric \npolynomials in the complex plane. Inspired by their beauty and giving myself an\nexcuse to use jax. I decided to make my on animation \n\n```python\nimport jax\nimport jax.numpy as jnp\nimport os\nos.environ[\"XLA_PYTHON_CLIENT_PREALLOCATE\"] = \"false\"\n```\n\nConsider the parametric polynomial\n\n$f(x)= |t|x^{14}  +(t^{5}+i t^{2}+t+5) x^{10} + (t^{2}+1) x^{5} + 2 $\n\n```python\n# @jax.jit\n# def polynomial(ts,a):\n#     coeffs = lambda t: jnp.array([1,jnp.abs(t)**2 -t,t**11 - abs(t)**10,0,(a*t**5 - 12j*t**2 -1),0,0,0,0,(a*t**3+5*t**2 - 1),0,0,0,0,-6*abs(t)])\n#     func1=jax.vmap(lambda t,a: jnp.roots(coeffs(t,a),strip_zeros=False))\n#     func2=jax.vmap(lambda a:func1(ts,a))\n#     return jnp.nan_to_num(func2(a))\n    \n```\n\n```python\nfrom jax import random\nkey = random.key(42)\nkey2 = random.key(84)\n```\n\n```python\ndef polynomial_coeffs(t, a):\n    return jnp.array([a, (a**2), (-a)**3, 0, (5*a*t**5 - 1.2*a*1j*t**2 - 1), 0, 0, a**2-a, 0, (a*t**3 + a*t**2 - 2), 0, 5*a-1, t**2, 0, -t])\n\ndef compute_roots_for_single_a(a, ts):\n    def roots_for_single_t(t):\n        coeffs = polynomial_coeffs(t, a)\n        return jnp.roots(coeffs, strip_zeros=False)\n    \n    return jax.vmap(roots_for_single_t)(ts)\n\n@jax.jit\ndef polynomial(ts, as_):\n    return jnp.nan_to_num(jax.vmap(lambda a: compute_roots_for_single_a(a, ts))(as_))\n```\n\n```python\nimport numpy as np\nresult=[]\nj=0.5\nwhile j\u003C2:\n    x=random.uniform(key, shape=(5000,))\n    y=random.uniform(key2, shape=(5000,))\n    a=jnp.linspace(-1+j,-0.9+j,25)\n    z=x+1j*y\n    j+=0.1\n    one=polynomial(z,a)\n    result.append(np.array(one))\n    print(j)\nanswer=np.concatenate(result,axis=0)\n\n```\n\nThe plot is nice, I want to include more points and make the visualization nicer, in a similar way to the tweet\n\n```python\nfrom matplotlib.animation import FuncAnimation\nimport matplotlib.pyplot as plt\n# Assuming 'one' is your array of roots from the polynomial function\n# If it's not defined, you'll need to calculate it using your polynomial function\n\nfig, ax = plt.subplots(figsize=(8, 8))\nscatter = ax.scatter([], [], s=0.0005, cmap='viridis')\n\n# Set the axis limits (adjust these based on your data)\n#ax.set_xlim(jnp.real(one).min() - 0.1, jnp.real(one).max() + 0.1)\n#ax.set_ylim(jnp.imag(one).min() - 0.1, jnp.imag(one).max() + 0.1)\nal=2.4\nb=2\nax.set_xlim(-al - 0.01*al, al + 0.01*al)\nax.set_ylim(-b- 0.01*b, b + 0.01*b)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['bottom'].set_visible(False)\nax.xaxis.set_ticks([])\nax.yaxis.set_ticks([])\nfig.patch.set_facecolor('beige')  # Figure background color\nax.set_facecolor('beige')       # Axes background color\nplt.subplots_adjust(left=0, right=1, top=1, bottom=0)\n\ndef animate(frame):\n    one2 = np.array(answer[frame]).flatten()  # Replace np with jnp if needed\n    real_vals = np.real(one2)\n    imag_vals = np.imag(one2)\n    \n    # Compute the absolute values for coloring\n    colors = np.abs(one2)\n\n    # Update scatter plot with new points and colors\n    scatter.set_offsets(np.column_stack((real_vals, imag_vals)))\n    scatter.set_array(colors)  # Set the color array to map to point absolute values\n    \n    return scatter,\nanim = FuncAnimation(fig, animate, frames=len(answer), interval=5, blit=True)\n\n# Uncomment the next line to save the animation\nanim.save('polynomial_roots.gif', writer='pillow', fps=50)\n\nplt.show()\n```\n\n```python\nfrom IPython.display import Image\nImage(open('polynomial_roots.gif','rb').read())\n\n```\n\n\n![](polynomial_roots.gif)\n\n\nTODO:\n\n- Make animation prettier perhaps with manim\n- Use the polynomial from the tweets or something prettier\n- Make another file with some fractal\n- Refactor the polynomial code so you get some jax practice\n\n```python\n\n```\n\n```python\n\n```","src/content/blog/jax_root_pol.md",[114],"polynomial_roots.gif","b5d1f40d4271d8ab",{"html":117,"metadata":118},"\u003Ch3 id=\"roots-of-parametric-polynomials\">Roots of Parametric Polynomials\u003C/h3>\n\u003Cp>On of my recent endless scrolls to social media, I encountered beautiful\nanimations from Professor Simone Conradi, showing the roots of parametric\npolynomials in the complex plane. Inspired by their beauty and giving myself an\nexcuse to use jax. I decided to make my on animation\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jax\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jax.numpy \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jnp\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> os\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">os.environ[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"XLA_PYTHON_CLIENT_PREALLOCATE\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"false\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Consider the parametric polynomial\u003C/p>\n\u003Cp>\u003Cspan class=\"katex\">\u003Cspan class=\"katex-mathml\">\u003Cmath xmlns=\"http://www.w3.org/1998/Math/MathML\">\u003Csemantics>\u003Cmrow>\u003Cmi>f\u003C/mi>\u003Cmo stretchy=\"false\">(\u003C/mo>\u003Cmi>x\u003C/mi>\u003Cmo stretchy=\"false\">)\u003C/mo>\u003Cmo>=\u003C/mo>\u003Cmi mathvariant=\"normal\">∣\u003C/mi>\u003Cmi>t\u003C/mi>\u003Cmi mathvariant=\"normal\">∣\u003C/mi>\u003Cmsup>\u003Cmi>x\u003C/mi>\u003Cmn>14\u003C/mn>\u003C/msup>\u003Cmo>+\u003C/mo>\u003Cmo stretchy=\"false\">(\u003C/mo>\u003Cmsup>\u003Cmi>t\u003C/mi>\u003Cmn>5\u003C/mn>\u003C/msup>\u003Cmo>+\u003C/mo>\u003Cmi>i\u003C/mi>\u003Cmsup>\u003Cmi>t\u003C/mi>\u003Cmn>2\u003C/mn>\u003C/msup>\u003Cmo>+\u003C/mo>\u003Cmi>t\u003C/mi>\u003Cmo>+\u003C/mo>\u003Cmn>5\u003C/mn>\u003Cmo stretchy=\"false\">)\u003C/mo>\u003Cmsup>\u003Cmi>x\u003C/mi>\u003Cmn>10\u003C/mn>\u003C/msup>\u003Cmo>+\u003C/mo>\u003Cmo stretchy=\"false\">(\u003C/mo>\u003Cmsup>\u003Cmi>t\u003C/mi>\u003Cmn>2\u003C/mn>\u003C/msup>\u003Cmo>+\u003C/mo>\u003Cmn>1\u003C/mn>\u003Cmo stretchy=\"false\">)\u003C/mo>\u003Cmsup>\u003Cmi>x\u003C/mi>\u003Cmn>5\u003C/mn>\u003C/msup>\u003Cmo>+\u003C/mo>\u003Cmn>2\u003C/mn>\u003C/mrow>\u003Cannotation encoding=\"application/x-tex\">f(x)= |t|x^{14}  +(t^{5}+i t^{2}+t+5) x^{10} + (t^{2}+1) x^{5} + 2 \u003C/annotation>\u003C/semantics>\u003C/math>\u003C/span>\u003Cspan class=\"katex-html\" aria-hidden=\"true\">\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f\u003C/span>\u003Cspan class=\"mopen\">(\u003C/span>\u003Cspan class=\"mord mathnormal\">x\u003C/span>\u003Cspan class=\"mclose\">)\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2778em;\">\u003C/span>\u003Cspan class=\"mrel\">=\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2778em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\">\u003C/span>\u003Cspan class=\"mord\">∣\u003C/span>\u003Cspan class=\"mord mathnormal\">t\u003C/span>\u003Cspan class=\"mord\">∣\u003C/span>\u003Cspan class=\"mord\">\u003Cspan class=\"mord mathnormal\">x\u003C/span>\u003Cspan class=\"msupsub\">\u003Cspan class=\"vlist-t\">\u003Cspan class=\"vlist-r\">\u003Cspan class=\"vlist\" style=\"height:0.8141em;\">\u003Cspan style=\"top:-3.063em;margin-right:0.05em;\">\u003Cspan class=\"pstrut\" style=\"height:2.7em;\">\u003C/span>\u003Cspan class=\"sizing reset-size6 size3 mtight\">\u003Cspan class=\"mord mtight\">\u003Cspan class=\"mord mtight\">14\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">+\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\">\u003C/span>\u003Cspan class=\"mopen\">(\u003C/span>\u003Cspan class=\"mord\">\u003Cspan class=\"mord mathnormal\">t\u003C/span>\u003Cspan class=\"msupsub\">\u003Cspan class=\"vlist-t\">\u003Cspan class=\"vlist-r\">\u003Cspan class=\"vlist\" style=\"height:0.8141em;\">\u003Cspan style=\"top:-3.063em;margin-right:0.05em;\">\u003Cspan class=\"pstrut\" style=\"height:2.7em;\">\u003C/span>\u003Cspan class=\"sizing reset-size6 size3 mtight\">\u003Cspan class=\"mord mtight\">\u003Cspan class=\"mord mtight\">5\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">+\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\">i\u003C/span>\u003Cspan class=\"mord\">\u003Cspan class=\"mord mathnormal\">t\u003C/span>\u003Cspan class=\"msupsub\">\u003Cspan class=\"vlist-t\">\u003Cspan class=\"vlist-r\">\u003Cspan class=\"vlist\" style=\"height:0.8141em;\">\u003Cspan style=\"top:-3.063em;margin-right:0.05em;\">\u003Cspan class=\"pstrut\" style=\"height:2.7em;\">\u003C/span>\u003Cspan class=\"sizing reset-size6 size3 mtight\">\u003Cspan class=\"mord mtight\">\u003Cspan class=\"mord mtight\">2\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">+\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:0.6984em;vertical-align:-0.0833em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\">t\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">+\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\">\u003C/span>\u003Cspan class=\"mord\">5\u003C/span>\u003Cspan class=\"mclose\">)\u003C/span>\u003Cspan class=\"mord\">\u003Cspan class=\"mord mathnormal\">x\u003C/span>\u003Cspan class=\"msupsub\">\u003Cspan class=\"vlist-t\">\u003Cspan class=\"vlist-r\">\u003Cspan class=\"vlist\" style=\"height:0.8141em;\">\u003Cspan style=\"top:-3.063em;margin-right:0.05em;\">\u003Cspan class=\"pstrut\" style=\"height:2.7em;\">\u003C/span>\u003Cspan class=\"sizing reset-size6 size3 mtight\">\u003Cspan class=\"mord mtight\">\u003Cspan class=\"mord mtight\">10\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">+\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\">\u003C/span>\u003Cspan class=\"mopen\">(\u003C/span>\u003Cspan class=\"mord\">\u003Cspan class=\"mord mathnormal\">t\u003C/span>\u003Cspan class=\"msupsub\">\u003Cspan class=\"vlist-t\">\u003Cspan class=\"vlist-r\">\u003Cspan class=\"vlist\" style=\"height:0.8141em;\">\u003Cspan style=\"top:-3.063em;margin-right:0.05em;\">\u003Cspan class=\"pstrut\" style=\"height:2.7em;\">\u003C/span>\u003Cspan class=\"sizing reset-size6 size3 mtight\">\u003Cspan class=\"mord mtight\">\u003Cspan class=\"mord mtight\">2\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">+\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\">\u003C/span>\u003Cspan class=\"mord\">1\u003C/span>\u003Cspan class=\"mclose\">)\u003C/span>\u003Cspan class=\"mord\">\u003Cspan class=\"mord mathnormal\">x\u003C/span>\u003Cspan class=\"msupsub\">\u003Cspan class=\"vlist-t\">\u003Cspan class=\"vlist-r\">\u003Cspan class=\"vlist\" style=\"height:0.8141em;\">\u003Cspan style=\"top:-3.063em;margin-right:0.05em;\">\u003Cspan class=\"pstrut\" style=\"height:2.7em;\">\u003C/span>\u003Cspan class=\"sizing reset-size6 size3 mtight\">\u003Cspan class=\"mord mtight\">\u003Cspan class=\"mord mtight\">5\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">+\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:0.6444em;\">\u003C/span>\u003Cspan class=\"mord\">2\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># @jax.jit\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># def polynomial(ts,a):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#     coeffs = lambda t: jnp.array([1,jnp.abs(t)**2 -t,t**11 - abs(t)**10,0,(a*t**5 - 12j*t**2 -1),0,0,0,0,(a*t**3+5*t**2 - 1),0,0,0,0,-6*abs(t)])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#     func1=jax.vmap(lambda t,a: jnp.roots(coeffs(t,a),strip_zeros=False))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#     func2=jax.vmap(lambda a:func1(ts,a))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#     return jnp.nan_to_num(func2(a))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jax \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> random\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">key \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> random.key(\u003C/span>\u003Cspan style=\"color:#79B8FF\">42\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">key2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> random.key(\u003C/span>\u003Cspan style=\"color:#79B8FF\">84\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">def\u003C/span>\u003Cspan style=\"color:#B392F0\"> polynomial_coeffs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(t, a):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jnp.array([a, (a\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), (\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">a)\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">a\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">t\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.2\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">a\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">j*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">t\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, a\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">a, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (a\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">t\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">t\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">a\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, t\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">t])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">def\u003C/span>\u003Cspan style=\"color:#B392F0\"> compute_roots_for_single_a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(a, ts):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#B392F0\"> roots_for_single_t\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(t):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        coeffs \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> polynomial_coeffs(t, a)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jnp.roots(coeffs, \u003C/span>\u003Cspan style=\"color:#FFAB70\">strip_zeros\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">False\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jax.vmap(roots_for_single_t)(ts)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@jax.jit\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">def\u003C/span>\u003Cspan style=\"color:#B392F0\"> polynomial\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(ts, as_):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> jnp.nan_to_num(jax.vmap(\u003C/span>\u003Cspan style=\"color:#F97583\">lambda\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a: compute_roots_for_single_a(a, ts))(as_))\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numpy \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">result\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">j\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0.5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">while\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> j\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    x\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">random.uniform(key, \u003C/span>\u003Cspan style=\"color:#FFAB70\">shape\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    y\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">random.uniform(key2, \u003C/span>\u003Cspan style=\"color:#FFAB70\">shape\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    a\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">jnp.linspace(\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">j,\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\">0.9\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">j,\u003C/span>\u003Cspan style=\"color:#79B8FF\">25\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    z\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">x\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">j*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">y\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    j\u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0.1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    one\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">polynomial(z,a)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    result.append(np.array(one))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    print\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(j)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">answer\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">np.concatenate(result,\u003C/span>\u003Cspan style=\"color:#FFAB70\">axis\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The plot is nice, I want to include more points and make the visualization nicer, in a similar way to the tweet\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> matplotlib.animation \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> FuncAnimation\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> matplotlib.pyplot \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> plt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Assuming 'one' is your array of roots from the polynomial function\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># If it's not defined, you'll need to calculate it using your polynomial function\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fig, ax \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> plt.subplots(\u003C/span>\u003Cspan style=\"color:#FFAB70\">figsize\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">scatter \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ax.scatter([], [], \u003C/span>\u003Cspan style=\"color:#FFAB70\">s\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0.0005\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">cmap\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'viridis'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Set the axis limits (adjust these based on your data)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#ax.set_xlim(jnp.real(one).min() - 0.1, jnp.real(one).max() + 0.1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#ax.set_ylim(jnp.imag(one).min() - 0.1, jnp.imag(one).max() + 0.1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">al\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">2.4\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">b\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.set_xlim(\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">al \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0.01\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">al, al \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0.01\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">al)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.set_ylim(\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0.01\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b, b \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0.01\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.spines[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'top'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].set_visible(\u003C/span>\u003Cspan style=\"color:#79B8FF\">False\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.spines[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'right'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].set_visible(\u003C/span>\u003Cspan style=\"color:#79B8FF\">False\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.spines[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'left'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].set_visible(\u003C/span>\u003Cspan style=\"color:#79B8FF\">False\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.spines[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'bottom'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].set_visible(\u003C/span>\u003Cspan style=\"color:#79B8FF\">False\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.xaxis.set_ticks([])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.yaxis.set_ticks([])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fig.patch.set_facecolor(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'beige'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)  \u003C/span>\u003Cspan style=\"color:#6A737D\"># Figure background color\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ax.set_facecolor(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'beige'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)       \u003C/span>\u003Cspan style=\"color:#6A737D\"># Axes background color\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">plt.subplots_adjust(\u003C/span>\u003Cspan style=\"color:#FFAB70\">left\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">right\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">top\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">bottom\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">def\u003C/span>\u003Cspan style=\"color:#B392F0\"> animate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(frame):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    one2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.array(answer[frame]).flatten()  \u003C/span>\u003Cspan style=\"color:#6A737D\"># Replace np with jnp if needed\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    real_vals \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.real(one2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    imag_vals \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.imag(one2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    # Compute the absolute values for coloring\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    colors \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.abs(one2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    # Update scatter plot with new points and colors\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    scatter.set_offsets(np.column_stack((real_vals, imag_vals)))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    scatter.set_array(colors)  \u003C/span>\u003Cspan style=\"color:#6A737D\"># Set the color array to map to point absolute values\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> scatter,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">anim \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> FuncAnimation(fig, animate, \u003C/span>\u003Cspan style=\"color:#FFAB70\">frames\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(answer), \u003C/span>\u003Cspan style=\"color:#FFAB70\">interval\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">blit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">True\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Uncomment the next line to save the animation\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">anim.save(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'polynomial_roots.gif'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">writer\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'pillow'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">fps\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">plt.show()\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> IPython.display \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Image\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Image(\u003C/span>\u003Cspan style=\"color:#79B8FF\">open\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'polynomial_roots.gif'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'rb'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).read())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;polynomial_roots.gif&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>TODO:\u003C/p>\n\u003Cul>\n\u003Cli>Make animation prettier perhaps with manim\u003C/li>\n\u003Cli>Use the polynomial from the tweets or something prettier\u003C/li>\n\u003Cli>Make another file with some fractal\u003C/li>\n\u003Cli>Refactor the polynomial code so you get some jax practice\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>",{"headings":119,"localImagePaths":124,"remoteImagePaths":125,"frontmatter":126,"imagePaths":132},[120],{"depth":121,"slug":122,"text":123},3,"roots-of-parametric-polynomials","Roots of Parametric Polynomials",[114],[],{"title":97,"description":99,"date":127,"jupyter":128},["Date","2024-03-14T00:00:00.000Z"],{"jupytext":129,"kernelspec":131},{"text_representation":130},{"extension":103,"format_name":104,"format_version":105,"jupytext_version":106},{"display_name":108,"language":109,"name":110},[114],"jax_root_pol.md"]