---
interface Note {
  name: string;
  path: string;
  date: string;
  type: 'pdf' | 'markdown';
  description?: string;
}

interface Props {
  notes: Note[];
}

const { notes } = Astro.props;
---

<div class="space-y-4">
  {notes.map((note) => (
    <div class="flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg shadow-sm">
      <div class="flex items-center space-x-4">
        {note.type === 'pdf' ? (
          <svg 
            class="w-8 h-8 text-red-500" 
            fill="currentColor" 
            viewBox="0 0 20 20"
          >
            <path d="M9 2a2 2 0 00-2 2v8a2 2 0 002 2h6a2 2 0 002-2V6.414A2 2 0 0016.414 5L14 2.586A2 2 0 0012.586 2H9z" />
            <path d="M3 8a2 2 0 012-2v10h8a2 2 0 01-2 2H5a2 2 0 01-2-2V8z" />
          </svg>
        ) : (
          <svg
            class="w-8 h-8 text-blue-500"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z"/>
          </svg>
        )}
        <div>
          <h3 class="font-medium">{note.name}</h3>
          <p class="text-sm text-gray-500 dark:text-gray-400">{note.date}</p>
          {note.description && (
            <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">{note.description}</p>
          )}
        </div>
      </div>
      <a
        href={note.path}
        class={`px-4 py-2 text-sm font-medium ${
          note.type === 'pdf' 
            ? 'text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300'
            : 'text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300'
        }`}
        {...(note.type === 'pdf' ? { download: true } : {})}
      >
        {note.type === 'pdf' ? 'Download PDF' : 'Read Note'}
      </a>
    </div>
  ))}
</div>