---
import Layout from '../layouts/Layout.astro';
// Import the new specific function
import { getPublicationsGroupedByYear } from '../utils/publications';
import AuthorList from '../components/AuthorList.astro';

// Fetch and group publications from papers.bib
const papersSections = await getPublicationsGroupedByYear("public/publications/papers.bib");

// Fetch and group publications from preprints.bib
const preprintsSections = await getPublicationsGroupedByYear("public/publications/preprints.bib");
---

<Layout title="Publications">
  <main class="max-w-4xl mx-auto">
    <h1 class="text-4xl font-bold mb-8 text-center">Publications</h1>

    <h2 class="text-3xl font-bold mb-6 mt-10">Journal Papers</h2>
    {papersSections.length === 0 ? (
      <div class="bg-yellow-50 dark:bg-yellow-900 border-l-4 border-yellow-400 p-4 mb-8">
        <p class="text-yellow-700 dark:text-yellow-200">
          No papers found in `public/publications/papers.bib`.
        </p>
      </div>
    ) : (
      <div class="space-y-4 mb-12">
        {papersSections.map((section, index) => (
          <div class="mb-4">
            <button
              class="w-full p-4 bg-white dark:bg-gray-800 rounded-lg shadow-sm flex justify-between items-center"
              data-section-id={`papers-${section.section}`}
              aria-expanded={index === 0 ? 'true' : 'false'}
              aria-controls={`section-content-papers-${section.section}`}
            >
              <h3 class="text-2xl font-semibold capitalize">
                {section.section.replace(/-/g, ' ') || "Unknown Year"}
              </h3>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class={`w-6 h-6 transition-transform ${index === 0 ? 'rotate-180' : ''}`}
                aria-hidden="true"
              >
                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
              </svg>
            </button>

            <div
              id={`section-content-papers-${section.section}`}
              class={`space-y-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg shadow-sm mt-2 ${index === 0 ? '' : 'hidden'}`}
            >
              {section.entries.map((entry) => (
                <div class="flex flex-col sm:flex-row gap-6 p-4 bg-white dark:bg-gray-800 rounded-lg shadow-sm items-start">
                  {entry.preview && (
                    <div class="w-full sm:w-32 flex-shrink-0">
                      <img
                        src={entry.preview}
                        alt={`Preview for ${entry.title || "Untitled"}`}
                        class="w-full h-auto rounded"
                      />
                    </div>
                  )}

                  <div class="flex-grow">
                    <h4 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-2">
                      {entry.title || "Untitled"}
                    </h4>

                    <p class="text-gray-600 dark:text-gray-400 mb-2">
                      <AuthorList authorsString={entry.author} />
                    </p>

                    <p class="text-gray-500 dark:text-gray-500 text-sm">
                      {entry.journal || entry.booktitle || "Unknown Journal"}, {entry.year || "Unknown Year"}
                    </p>

                    <div class="mt-2 flex flex-wrap gap-4">
                      {entry.doi && (
                        <div class="flex items-center">
                          <img
                            src="https://upload.wikimedia.org/wikipedia/commons/1/11/DOI_logo.svg"
                            alt="DOI"
                            class="h-10 w-10 mr-2"
                          />
                          <a
                            href={`https://doi.org/${entry.doi}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300"
                          >
                            DOI: {entry.doi}
                          </a>
                        </div>
                      )}

                      {entry.arxiv && (
                        <div class="flex items-center">
                          <img
                            src="https://upload.wikimedia.org/wikipedia/commons/b/bc/ArXiv_logo_2022.svg"
                            alt="arXiv"
                            class="h-10 w-10 mr-2"
                          />
                          <a
                            href={entry.arxiv}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300"
                          >
                            arXiv: {entry.arxiv.substring(entry.arxiv.lastIndexOf('/') + 1)}
                          </a>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    )}

    <h2 class="text-3xl font-bold mb-6 mt-10">Preprints</h2>
    {preprintsSections.length === 0 ? (
      <div class="bg-yellow-50 dark:bg-yellow-900 border-l-4 border-yellow-400 p-4">
        <p class="text-yellow-700 dark:text-yellow-200">
          No preprints found in `public/publications/preprints.bib`.
        </p>
      </div>
    ) : (
      <div class="space-y-4">
        {preprintsSections.map((section, index) => (
          <div class="mb-4">
            <button
              class="w-full p-4 bg-white dark:bg-gray-800 rounded-lg shadow-sm flex justify-between items-center"
              data-section-id={`preprints-${section.section}`}
              aria-expanded={index === 0 ? 'true' : 'false'}
              aria-controls={`section-content-preprints-${section.section}`}
            >
              <h3 class="text-2xl font-semibold capitalize">
                {section.section.replace(/-/g, ' ') || "Unknown Year"}
              </h3>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class={`w-6 h-6 transition-transform ${index === 0 ? 'rotate-180' : ''}`}
                aria-hidden="true"
              >
                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
              </svg>
            </button>

            <div
              id={`section-content-preprints-${section.section}`}
              class={`space-y-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg shadow-sm mt-2 ${index === 0 ? '' : 'hidden'}`}
            >
              {section.entries.map((entry) => (
                <div class="flex flex-col sm:flex-row gap-6 p-4 bg-white dark:bg-gray-800 rounded-lg shadow-sm items-start">
                  {entry.preview && (
                    <div class="w-full sm:w-32 flex-shrink-0">
                      <img
                        src={entry.preview}
                        alt={`Preview for ${entry.title || "Untitled"}`}
                        class="w-full h-auto rounded"
                      />
                    </div>
                  )}

                  <div class="flex-grow">
                    <h4 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-2">
                      {entry.title || "Untitled"}
                    </h4>

                    <p class="text-gray-600 dark:text-gray-400 mb-2">
                      <AuthorList authorsString={entry.author} />
                    </p>

                    <p class="text-gray-500 dark:text-gray-500 text-sm">
                      {entry.journal || entry.booktitle || "Unknown Journal"}, {entry.year || "Unknown Year"}
                    </p>

                    <div class="mt-2 flex flex-wrap gap-4">
                      {entry.doi && (
                        <div class="flex items-center">
                          <img
                            src="https://upload.wikimedia.org/wikipedia/commons/1/11/DOI_logo.svg"
                            alt="DOI"
                            class="h-10 w-10 mr-2"
                          />
                          <a
                            href={`https://doi.org/${entry.doi}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300"
                          >
                            DOI: {entry.doi}
                          </a>
                        </div>
                      )}

                      {entry.arxiv && (
                        <div class="flex items-center">
                          <img
                            src="https://upload.wikimedia.org/wikipedia/commons/b/bc/ArXiv_logo_2022.svg"
                            alt="arXiv"
                            class="h-10 w-10 mr-2"
                          />
                          <a
                            href={entry.arxiv}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300"
                          >
                            arXiv: {entry.arxiv.substring(entry.arxiv.lastIndexOf('/') + 1)}
                          </a>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    )}
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const sectionButtons = document.querySelectorAll('[data-section-id]');

    sectionButtons.forEach((button) => {
      button.addEventListener('click', () => {
        const sectionId = button.getAttribute('data-section-id');
        const content = document.getElementById(`section-content-${sectionId}`);
        const arrow = button.querySelector('svg');
        const expanded = button.getAttribute('aria-expanded') === 'true';

        if (content) {
          content.classList.toggle('hidden');
          arrow?.classList.toggle('rotate-180');
          button.setAttribute('aria-expanded', (!expanded).toString());
        }
      });
    });
  });
</script>
